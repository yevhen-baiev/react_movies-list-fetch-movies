{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","DEFAULT","FindMovie","addMovie","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setMovie","_useState7","_useState8","hasError","setHasError","_Fragment","onSubmit","e","preventDefault","fetch","concat","then","res","json","catch","Response","Error","getMovie","trim","data","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","value","cn","onChange","target","disabled","onClick","App","setMovies","length","find","el","prev","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91ed8a12.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nconst DEFAULT = {\n  PICTURE: 'https://via.placeholder.com/360x270.png?text=no%20preview',\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [hasError, setHasError] = useState(false);\n\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n    setHasError(false);\n  };\n\n  const normalizeMovie = (data: MovieData): Movie => ({\n    title: data.Title,\n    description: data.Plot,\n    imgUrl: data.Poster === 'N/A' ? DEFAULT.PICTURE : data.Poster,\n    imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n    imdbId: data.imdbID,\n  });\n\n  const handleOnSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    setIsLoading(true);\n\n    const trimmedQuery = query.trim();\n\n    getMovie(trimmedQuery)\n      .then((res: MovieData | ResponseError) => {\n        if ('Error' in res) {\n          setHasError(true);\n          setMovie(null);\n        } else {\n          setMovie(normalizeMovie(res));\n        }\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  const handleAddMovie = () => {\n    if (movie) {\n      addMovie(movie);\n    }\n\n    setQuery('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleOnSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              value={query}\n              className={cn('input', { 'is-danger': hasError })}\n              onChange={handleOnChange}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', { 'is-loading': isLoading })}\n              disabled={!query.trim()}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=8722e14b';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovies = (movie: Movie) => {\n    const exist = movies.find(el => el.imdbId === movie.imdbId);\n\n    if (!exist) {\n      setMovies(prev => [...prev, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        {movies.length > 0 && <MoviesList movies={movies} />}\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={handleAddMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}